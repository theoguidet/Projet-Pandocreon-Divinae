package Joueur;

import java.util.ArrayList;
import carte.Carte;
import carte.TypeCarte;
import carte.croyants.Croyant;
import carte.guideSpirituel.GuideSpirituel;
import partie.Partie;
import partie.Plateau;
import dpStrategy.Strategie;
import dpStrategy.StrategyContext;

public class JoueurVirtuel extends Joueur{

	public JoueurVirtuel(String nom){
		super(nom);
		this.estVirtuel = true;
	}

	public ArrayList<Carte> choisirCarteAJouer(){
		StrategyContext context = new StrategyContext();
		context.setStrategie(new Strategie());
		ArrayList<Carte> cartesAJouer = context.choixCarte(main, pointActionJour, pointActionNuit, pointActionNeant);
		return cartesAJouer;
	}

	public void choisirCarteADefausser(Partie partie){
		StrategyContext context = new StrategyContext();
		context.setStrategie(new Strategie());
		ArrayList<Carte> cartesADefausser = context.choixCarteDefausse(main, pointActionJour, pointActionNuit, pointActionNeant);
		
		for (Carte carte : cartesADefausser) {
			partie.ajouterADefausse(carte);
			main.remove(carte);
		}
	}

	public ArrayList<Carte> choisirCarteASacrifier(){
		StrategyContext context = new StrategyContext();
		context.setStrategie(new Strategie());
		ArrayList<Carte> cartesADefausser = context.choixCarteDefausse(main, pointActionJour, pointActionNuit, pointActionNeant);
		return cartesADefausser;
	}


	public void tourDeJeu(Partie p){
		lancerDe();
		ArrayList<Carte> carteADefausser = choisirCarteADefausser(p);
		
	}

	public void afficherMain(){}
}